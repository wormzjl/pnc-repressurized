buildscript {
    repositories {
        jcenter()
        maven { url = "https://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

repositories {
    maven {
        name = "CoFH Maven"
        url = "http://maven.covers1624.net"
    }
    maven {
        name = "JEI"
        url = "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        name = "MCMP"
        url = "http://maven.amadornes.com/"
    }
    maven {
        name = "OpenComputers"
        url = "http://maven.cil.li/"
    }
    maven {
        name = "hwyla"
        url = 'http://tehnut.info/maven/'
    }
    maven { // TOP
        name = "tterrag maven"
        url = "http://maven.tterrag.com/"
    }
    maven {
        name = 'BlameJared - Crafttweaker/Patchouli'
        url = 'http://maven.blamejared.com/'
    }
    maven {
        name = "K-4u Mod maven"
        url = "https://modmaven.k-4u.nl/"
    }
    maven {
        name = "ic2"
        url = "http://maven.ic2.player.to/"
    }
    maven { // Albedo Lights
        url = 'https://repo.elytradev.com/'
    }
    maven { // Baubles
        name = "thiakil"
        url = "http://maven.thiakil.com"
    }
}

task copyCIArtifacts << {
    if (System.getenv("CIRCLECI").equals("true")) {
        copy {
            from(file('build/libs/').listFiles())
            into System.getenv('CIRCLE_ARTIFACTS')
        }
    }
}

// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
version = "${mc_version}-${mod_version_massive}.${mod_version_major}.${mod_version_minor}"
group = "me.desht.pneumaticcraft"
archivesBaseName = "pneumaticcraft-repressurized"

if (System.getenv().BUILD_NUMBER != null) {
    version += "-${System.getenv().BUILD_NUMBER}"
} else {
    version += "-CUSTOM"
}

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

// prevent java 8's strict doclint for javadocs from failing builds
allprojects {
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

jar {
    from sourceSets.main.output
    from sourceSets.api.output
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
    from sourceSets.api.allJava
}

task apiJar(type: Jar) {
    classifier = 'api'
    from sourceSets.api.java
    // TODO: when FG bug is fixed, remove allJava from the api jar.
    // https://github.com/MinecraftForge/ForgeGradle/issues/369
    // Gradle should be able to pull them from the -sources jar.
    from sourceSets.api.allJava
}

task("uploadJars", dependsOn:"reobf") {
    description = "uploads JARs"
    if (System.getenv("local_maven") != null) {
        apply plugin: 'maven'
        uploadArchives {
            repositories {
                mavenDeployer {
                    repository(url: "file://" + System.getenv("local_maven"))
                }
            }
        }
    }
}

artifacts {
    archives sourcesJar
    archives apiJar
}

compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "${forge_version}"
    runDir = "run"
    mappings = "${mappings_version}"
    clientJvmArgs += "-Dfml.coreMods.load=elucent.albedo.asm.FMLPlugin"
    replace '@VERSION@', project.version
    replaceIn 'PneumaticCraftRepressurized.java'
    replace '@MASSIVE@', mod_version_massive
    replaceIn 'lib/Versions.java'
    replace '@MAJOR@', mod_version_major
    replaceIn 'lib/Versions.java'
    replace '@MINOR@', mod_version_minor
    replaceIn 'lib/Versions.java'
    replace '@MC_VERSION@', version
    replaceIn 'lib/Versions.java'
    if (System.getenv("BUILD_NUMBER") != null) {
        replace '@BUILD_NUMBER@', System.getenv("BUILD_NUMBER")
    } else {
        replace '@BUILD_NUMBER@', 0
    }
}

dependencies {
    compileOnly "cofh:RedstoneFlux:1.12-${redstone_flux_version}:universal"
    compileOnly("mekanism:Mekanism:${mekanism_version}:api") { exclude group: "mezz.jei" }
    compileOnly "mezz.jei:jei_${mc_version}:${jei_version}"
    compileOnly "cofh:CoFHCore:1.12.2-${cofhcore_version}:deobf"
    compileOnly "MCMultiPart2:MCMultiPart:${mcmultipart_version}"
    compileOnly "li.cil.oc:OpenComputers:MC1.12.2-${oc_version}:api"
    //compileOnly "dan200.computercraft:ComputerCraft:${computercraft_version}"
    compileOnly "mcp.mobius.waila:Hwyla:${hwyla_version}:api"
    compileOnly "mcjty.theoneprobe:TheOneProbe-1.12:${top_version}"
    compileOnly "CraftTweaker2:CraftTweaker2-API:${crafttweaker_version}"
    compileOnly "CraftTweaker2:CraftTweaker2-MC1120-Main:1.12-${crafttweaker_version}"
    compileOnly "igwmod:IGW-Mod-1.12.2:${igwmod_version}:universal"  // using universal instead of userdev for now
    compileOnly "net.industrial-craft:industrialcraft-2:2.8.27-ex112:api"
    //compileOnly "thaumcraft:Thaumcraft:${thaumcraft_version}"
    compileOnly "team.chisel.ctm:CTM:${ctm_version}:api"
    compileOnly "vazkii.botania:Botania:${botania_version}"
    //compileOnly("appeng:appliedenergistics2:${ae2_version}:api")
    //compileOnly "elucent:albedo:${albedo_version}"
    compileOnly "vazkii.patchouli:Patchouli:${patchouli_version}"
    compileOnly "blusunrize:ImmersiveEngineering:${immersive_engineering_version}"
    compileOnly "com.azanor.baubles:Baubles:${baubles_version}"
    compileOnly "com.github.glitchfiend.biomesoplenty:ToughAsNails:${tan_version}:universal"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

idea { module { inheritOutputDirs = true } }

jar {
    manifest {
        attributes 'FMLAT': 'pneumaticcraft_at.cfg'
    }
}
